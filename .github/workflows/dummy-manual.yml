name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      aws-account-id:
        description: 'AWS Account ID'
        required: true
      aws-region:
        description: 'AWS Region'
        required: false
        default: 'us-east-1'

permissions:
  contents: read

env:
  AWS_ACCOUNT_ID: ${{ github.event.inputs.aws-account-id }}
  AWS_REGION: ${{ github.event.inputs.aws-region }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  install-aws-cli:
    name: 'Install AWS CLI'
    runs-on: ubuntu-latest

    steps:
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY

      - name: Assume IAM Role for another account
        run: |
          TEMP_ROLE=$(aws sts assume-role --role-arn arn:aws:iam::${AWS_ACCOUNT_ID}:role/OllionPatchingAutomation) --role-session-name GitHubActions)
          export AWS_ACCESS_KEY_ID=$(echo $TEMP_ROLE | jq -r '.Credentials.AccessKeyId')
          export AWS_SECRET_ACCESS_KEY=$(echo $TEMP_ROLE | jq -r '.Credentials.SecretAccessKey')
          export AWS_SESSION_TOKEN=$(echo $TEMP_ROLE | jq -r '.Credentials.SessionToken')

      - name: Create or Check S3 Bucket Existence
        run: |
          if aws s3 ls s3://ollion-patching-terraform-state-in-${AWS_REGION}-and-${AWS_ACCOUNT_ID} 2>/dev/null; then
            echo "Bucket already exists."
          else
            echo "Bucket does not exist. Creating..."
            aws s3api create-bucket --bucket ollion-patching-terraform-state-in-${AWS_REGION}-and-${AWS_ACCOUNT_ID} --region ${AWS_REGION}
          fi

  # terraform:
  #   name: 'Terraform'
  #   runs-on: ubuntu-latest
  #   environment: production

  #   needs: install-aws-cli

  #   defaults:
  #     run:
  #       shell: bash

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Update Backend Configuration
  #       run: |
  #         sed -i "s/^ *bucket *=.*/bucket = \"ollion-patching-terraform-state-in-${AWS_REGION}-and-${AWS_ACCOUNT_ID}\"/" backend.tf
  #         sed -i "s/^ *region *=.*/region = \"${AWS_REGION}\"/" backend.tf

  #     - name: Set AWS Region
  #       run: aws configure set region ${AWS_REGION}

  #     - name: Terraform Init
  #       run: terraform init

  #     - name: Terraform Format
  #       run: terraform fmt -check

  #     - name: Terraform Plan
  #       run: terraform plan -input=false

  #     - name: Terraform Apply
  #       run: |
  #         terraform apply -auto-approve tfplan
