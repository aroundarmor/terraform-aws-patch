AWSTemplateFormatVersion: '2010-09-09'
Description: Ollion infrastructure and patch reporting automation.  [DO NOT ALTER or DELETE]
Parameters:
# added parameters for patch reporting 
  externalID:
    Type: String
    Description: The external id used for assuming the cross account role
    Default: "3f38e33d-8b6f-4fe1-9f8b-cbd0472f39c7"

# added parameters for OIDC
  GitHubOrg:
    Description: Name of GitHub organization/user (case sensitive)
    Type: String
    Default: "aroundarmor"
  RepositoryName:
    Description: Name of GitHub repository (case sensitive)
    Type: String
    Default: "terraform-aws-patch"
  OIDCProviderArn:
    Description: Arn for the GitHub OIDC Provider. Please keep it BLANK.
    Default: ""
    Type: String
  OIDCAudience:
    Description: Audience supplied to configure-aws-credentials.
    Default: "sts.amazonaws.com"
    Type: String
Conditions:
  CreateOIDCProvider: !Equals 
    - !Ref OIDCProviderArn
    - ""

Resources:
#OIDC creation
  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList: 
        - sts.amazonaws.com
      ThumbprintList:
        - ffffffffffffffffffffffffffffffffffffffff
# Role Creation
  OllionPatchingAutomation:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: OllionPatchingAutomation
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !GetAtt GithubOidc.Arn
                - !Ref OIDCProviderArn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: !Ref OIDCAudience
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*
      Policies:
        - PolicyName: OllionPatchingAutomationPolicy
          PolicyDocument: 
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                  - 'sts:AssumeRole'
                Resource: "*"
              - Effect: Allow
                Action: 
                  - 's3:CreateBucket'
                  - 's3:HeadBucket'
                  - 's3:List*'
                  - 's3:Get*'
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                  - 's3:DeleteBucket'
                  - 's3:PutBucketTagging'
                  - 's3:PutBucketVersioning'
                Resource: "*"
              - Effect: Allow
                Action:
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeImages'
                  - 'ec2:DescribeTags'
                  - 'ec2:DescribeRegions'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:GetRole'
                  - 'iam:Get*'
                  - 'iam:ListRoles'
                  - 'iam:List*'
                  - 'iam:PassRole'
                  - 'iam:AttachRolePolicy'
                  - 'iam:Create*'
                  - 'iam:Delete*'
                  - 'iam:Tag*'
                  - 'iam:DetachRolePolicy'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'lambda:List*'
                  - 'lambda:InvokeFunction'
                  - 'lambda:CreateFunction'
                  - 'lambda:TagResource'
                  - 'lambda:Get*'
                  - 'lambda:Delete*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'cloudformation:ListStacks'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DescribeStackEvents'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'cloudwatch:PutMetricData'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:TagResource'
                  - 'logs:PutRetentionPolicy'
                  - 'logs:ListTagsLogGroup'
                  - 'logs:DeleteLogGroup'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'sns:Get*'
                  - 'sns:List*'
                  - 'sns:Create*'
                  - 'sns:Delete*'
                  - 'sns:Set*'
                  - 'sns:Tag*'
                  - 'sns:Subscribe'
                  - 'sns:Unsubscribe'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'scheduler:*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'sqs:GetQueueAttributes'
                  - 'sqs:ChangeMessageVisibility'
                  - 'sqs:GetQueueUrl'
                  - 'sqs:ReceiveMessage'
                  - 'sqs:SendMessage'
                  - 'sqs:DeleteMessage'
                  - 'sqs:SetQueueAttributes'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ssm:CreateMaintenanceWindow'
                  - 'ssm:GetMaintenanceWindow'
                  - 'ssm:ListTagsForResource'
                  - 'ssm:DeleteMaintenanceWindow'
                  - 'ssm:RegisterTargetWithMaintenanceWindow'
                  - 'ssm:DescribeMaintenanceWindowTargets'
                  - 'ssm:DeregisterTargetFromMaintenanceWindow'
                  - 'ssm:RegisterTaskWithMaintenanceWindow'
                  - 'ssm:GetMaintenanceWindowTask'
                  - 'ssm:DeregisterTaskFromMaintenanceWindow'
                  - 'ssm:UpdateMaintenanceWindowTask'
                  - 'ssm:UpdateMaintenanceWindow'
                  - 'ssm:CreatePatchBaseline'
                  - 'ssm:GetPatchBaseline'
                  - 'ssm:DeletePatchBaseline'
                  - 'ssm:RegisterDefaultPatchBaseline'
                  - 'ssm:GetDefaultPatchBaseline'
                  - 'ssm:DescribePatchBaselines'
                  - 'ssm:UpdatePatchBaseline'
                  - 'ssm:AddTagsToResource'
                  - 'ssm:RegisterPatchBaselineForPatchGroup'
                  - 'ssm:DeregisterPatchBaselineForPatchGroup'
                  - 'ssm:Describe*'
                Resource: "*"
      Description: Allow Automation to create Maintenance windows associated with Patching Events


# Adding Cross-account-Role for reporting
  CrossAccountRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: 
                  Ref: externalID
            Effect: Allow
            Principal:
              AWS:
                - "arn:aws:iam::471112587537:root"
                - "arn:aws:iam::536269885160:root"
        Version: "2012-10-17"
      RoleName: Ollion-Platform-Automation
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      Tags: 
        - Key: ollion_workload
          Value: platform
  CrossAccountPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ssm:SendCommand
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: Ollion-PlatformAutomation
      Roles:
        - Ref: CrossAccountRole 
